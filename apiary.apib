FORMAT: 1A
HOST: https://everytoolsapi-api.onrender.com/api/v2/

# EveryTools API
Welcome to the EveryTools API. Where you can find all the tools you need in one place.

## ・ E-Mail Address Parser [/email?query={query}]
Parse e-mail address to get user and domain information.
- Rate limiting: 10/second; 300/minute; 1000000/day
- Cache duration: 1 second(s)

+ Parameters
  + query (string) - E-mail address to be parsed.

## Responses (GET) [GET]

+ Response 200 (application/json)

        {
          "api": {
            "elapsedTime": "float",
            "errorMessage": "None",
            "status": "True",
            "version": "str"
          },
          "response": {
            "domain": "string",
            "separator": "string",
            "user": "string"
          }
        }

+ Response 400 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

+ Response 500 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

## ・ FFprobe a Video URL [/ffprobe-a-video?query={query}]
Analyze a video URL using FFprobe to get its metadata.
- Rate limiting: 2/second; 120/minute; 500000/day
- Cache duration: 3600 second(s)

+ Parameters
  + query (string) - Video URL to be analyzed.

## Responses (GET) [GET]

+ Response 200 (application/json)

        {
          "api": {
            "elapsedTime": "float",
            "errorMessage": "None",
            "status": "True",
            "version": "str"
          },
          "response": {
            "format": "dict",
            "streams": "list"
          }
        }

+ Response 400 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

+ Response 500 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

## ・ Google Search Results Scraper [/scrap-google-search-results?query={query}&results={results}&language={language}]
Scrapes Google search results for a given query.
- Rate limiting: 1/second; 30/minute; 500000/day
- Cache duration: 3600 second(s)

+ Parameters
  + query (string) - Search query.


  + results (integer, optional) - Number of search results to be returned (max: 50). Default: 20.


  + language (string, optional) - Language code for the search results. Default: "en-US".

## Responses (GET) [GET]

+ Response 200 (application/json)

        {
          "api": {
            "elapsedTime": "float",
            "errorMessage": "None",
            "status": "True",
            "version": "str"
          },
          "response": {
            "searchResults": "list"
          }
        }

+ Response 400 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

+ Response 500 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

## ・ Instagram Reels URL Scraper [/scrap-instagram-reels?query={query}]
Scrapes Instagram Reel URL to get the media and thumbnail URLs.
- Rate limiting: 2/second; 60/minute; 500000/day
- Cache duration: 43200 second(s)

+ Parameters
  + query (string) - Instagram Reels URL.

## Responses (GET) [GET]

+ Response 200 (application/json)

        {
          "api": {
            "elapsedTime": "float",
            "errorMessage": "None",
            "status": "True",
            "version": "str"
          },
          "response": {
            "filename": "string",
            "mediaUrl": "string",
            "thumbnailUrl": "string"
          }
        }

+ Response 400 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

+ Response 500 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

## ・ Language Detector [/language-detector?query={query}]
Detects the predominant language in a text.
- Rate limiting: 4/second; 120/minute; 500000/day
- Cache duration: 600 second(s)

+ Parameters
  + query (string) - Text to be analyzed.

## Responses (GET) [GET]

+ Response 200 (application/json)

        {
          "api": {
            "elapsedTime": "float",
            "errorMessage": "None",
            "status": "True",
            "version": "str"
          },
          "response": {
            "detectedLanguageCode": "string"
          }
        }

+ Response 400 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

+ Response 500 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

## ・ My IP Address [/ip]
Get the IP address of the client making the request.
- Rate limiting: 4/second; 120/minute; 500000/day
- Cache duration: 1 second(s)

## Responses (GET) [GET]

+ Response 200 (application/json)

        {
          "api": {
            "elapsedTime": "float",
            "errorMessage": "None",
            "status": "True",
            "version": "str"
          },
          "response": {
            "originIpAddress": "string"
          }
        }

+ Response 400 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

+ Response 500 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

## ・ Retrieve Latest FFmpeg Build URL [/latest-ffmpeg-build?os={os}&arch={arch}&license={license}&shared={shared}]
Retrieve the latest FFmpeg build URL from the official repository based on the specified parameters.
- Rate limiting: 2/second; 60/minute; 500000/day
- Cache duration: 43200 second(s)

+ Parameters
  + os (string, optional) - Operating system (options: "windows", "linux").


  + arch (string, optional) - Architecture (options: "amd32", "amd64", "arm32", "arm64").


  + license (string, optional) - License type (options: "gpl", "lgpl").


  + shared (boolean, optional) - Whether the FFmpeg build is shared or not (options: "true", "false").

## Responses (GET) [GET]

+ Response 200 (application/json)

        {
          "api": {
            "elapsedTime": "float",
            "errorMessage": "None",
            "status": "True",
            "version": "str"
          },
          "response": {
            "matchedBuildUrls": "list"
          }
        }

+ Response 400 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

+ Response 500 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

## ・ Seconds to HH:MM:SS format Converter [/seconds-to-hh:mm:ss-format-converter?query={query}]
Convert seconds to HH:MM:SS format.
- Rate limiting: 10/second; 300/minute; 1000000/day
- Cache duration: 1 second(s)

+ Parameters
  + query (integer) - Seconds to be converted.

## Responses (GET) [GET]

+ Response 200 (application/json)

        {
          "api": {
            "elapsedTime": "float",
            "errorMessage": "None",
            "status": "True",
            "version": "str"
          },
          "response": {
            "hmsString": "string"
          }
        }

+ Response 400 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

+ Response 500 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

## ・ SoundCloud Track URL Scraper [/scrap-soundcloud-track?query={query}]
Scrapes SoundCloud track URL to get the media and thumbnail URLs.
- Rate limiting: 2/second; 60/minute; 500000/day
- Cache duration: 3600 second(s)

+ Parameters
  + query (string) - SoundCloud track URL.

## Responses (GET) [GET]

+ Response 200 (application/json)

        {
          "api": {
            "elapsedTime": "float",
            "errorMessage": "None",
            "status": "True",
            "version": "str"
          },
          "response": {
            "filename": "string",
            "mediaUrl": "string",
            "thumbnailUrl": "string"
          }
        }

+ Response 400 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

+ Response 500 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

## ・ String Counter [/string-counter?query={query}]
Count the number of characters, words, and many other elements in a text.
- Rate limiting: 5/second; 300/minute; 1000000/day
- Cache duration: 1 second(s)

+ Parameters
  + query (string) - Text to be analyzed.

## Responses (GET) [GET]

+ Response 200 (application/json)

        {
          "api": {
            "elapsedTime": "float",
            "errorMessage": "None",
            "status": "True",
            "version": "str"
          },
          "response": {
            "letters": {
              "characters": "dict",
              "total": "integer"
            },
            "lowercase": {
              "characters": "dict",
              "total": "integer"
            },
            "numbers": {
              "characters": "dict",
              "total": "integer"
            },
            "otherSymbols": {
              "characters": "dict",
              "total": "integer"
            },
            "spaces": "integer",
            "uppercase": {
              "characters": "dict",
              "total": "integer"
            },
            "words": {
              "characters": "dict",
              "total": "integer"
            }
          }
        }

+ Response 400 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

+ Response 500 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

## ・ TikTok Video URL Scraper [/scrap-tiktok-video?query={query}]
Scrapes TikTok video URL to get the media and thumbnail URLs.
- Rate limiting: 2/second; 60/minute; 500000/day
- Cache duration: 43200 second(s)

+ Parameters
  + query (string) - TikTok video URL.

## Responses (GET) [GET]

+ Response 200 (application/json)

        {
          "api": {
            "elapsedTime": "float",
            "errorMessage": "None",
            "status": "True",
            "version": "str"
          },
          "response": {
            "filename": "string",
            "mediaUrl": "string",
            "thumbnailUrl": "string"
          }
        }

+ Response 400 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

+ Response 500 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

## ・ Translator [/translator?query={query}&source={source}&destination={destination}]
Translate any text from one language to another.
- Rate limiting: 2/second; 120/minute; 500000/day
- Cache duration: 1 second(s)

+ Parameters
  + query (string) - Text to be translated.


  + source (string, optional) - Source language code (e.g., "pt" for Portuguese). If not provided, the language will be automatically detected.


  + destination (string) - Destination language code (e.g., "en" for English).

## Responses (GET) [GET]

+ Response 200 (application/json)

        {
          "api": {
            "elapsedTime": "float",
            "errorMessage": "None",
            "status": "True",
            "version": "str"
          },
          "response": {
            "translatedText": "string"
          }
        }

+ Response 400 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

+ Response 500 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

## ・ URL Parser [/url?query={query}]
Parse URL to get protocol, hostname, path, parameters, and fragment information.
- Rate limiting: 10/second; 300/minute; 1000000/day
- Cache duration: 1 second(s)

+ Parameters
  + query (string) - URL to be parsed.

## Responses (GET) [GET]

+ Response 200 (application/json)

        {
          "api": {
            "elapsedTime": "float",
            "errorMessage": "None",
            "status": "True",
            "version": "str"
          },
          "response": {
            "fragment": "string",
            "hostname": "string",
            "params": "dict",
            "path": "string",
            "protocol": "string"
          }
        }

+ Response 400 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

+ Response 500 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

## ・ User-Agent Parser [/useragent?query={query}]
Parse User-Agent string to get OS, browser, and device information. If no "query" parameter is provided, the User-Agent header will be used.
- Rate limiting: 10/second; 300/minute; 1000000/day
- Cache duration: 1 second(s)

+ Parameters
  + query (string, optional) - User-Agent string to be parsed.

## Responses (GET) [GET]

+ Response 200 (application/json)

        {
          "api": {
            "elapsedTime": "float",
            "errorMessage": "None",
            "status": "True",
            "version": "str"
          },
          "response": {
            "browser": {
              "family": "string",
              "version": "string",
              "versionString": "string"
            },
            "device": {
              "brand": "string",
              "family": "string",
              "model": "string"
            },
            "isBot": "boolean",
            "isComputer": "boolean",
            "isEmailClient": "boolean",
            "isMobile": "boolean",
            "isTablet": "boolean",
            "isTouchCapable": "boolean",
            "os": {
              "family": "string",
              "version": "string",
              "versionString": "string"
            },
            "uaString": "string"
          }
        }

+ Response 400 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

+ Response 500 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

## ・ YouTube Search Results Scraper [/scrap-youtube-search-results?query={query}]
Scrapes YouTube search results and returns a list of extracted videos.
- Rate limiting: 4/second; 120/minute; 500000/day
- Cache duration: 3600 second(s)

+ Parameters
  + query (string) - Search query.

## Responses (GET) [GET]

+ Response 200 (application/json)

        {
          "api": {
            "elapsedTime": "float",
            "errorMessage": "None",
            "status": "True",
            "version": "str"
          },
          "response": {
            "extractedUrlsData": [
              {
                "channelId": "string",
                "channelName": "string",
                "channelUrl": "string",
                "duration": "integer",
                "thumbnailUrls": "list",
                "videoId": "string",
                "videoTitle": "string",
                "videoUrl": "string",
                "viewCount": "integer"
              }
            ]
          }
        }

+ Response 400 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

+ Response 500 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

## ・ YouTube Video URL Scraper [/scrap-youtube-video?query={query}]
Scrapes YouTube video URL to get all the available information about the video.
- Rate limiting: 2/second; 60/minute; 500000/day
- Cache duration: 3600 second(s)

+ Parameters
  + query (string) - YouTube video URL.

## Responses (GET) [GET]

+ Response 200 (application/json)

        {
          "api": {
            "elapsedTime": "float",
            "errorMessage": "None",
            "status": "True",
            "version": "str"
          },
          "response": {
            "info": {
              "availability": "string",
              "categories": "list",
              "channelId": "string",
              "channelName": "string",
              "channelUrl": "string",
              "chapters": "list",
              "cleanChannelName": "string",
              "cleanTitle": "string",
              "commentCount": "integer",
              "description": "string",
              "duration": "integer",
              "embedUrl": "string",
              "followCount": "integer",
              "fullUrl": "string",
              "id": "string",
              "isAgeRestricted": "boolean",
              "isStreaming": "boolean",
              "isVerifiedChannel": "boolean",
              "language": "string",
              "likeCount": "integer",
              "shortUrl": "string",
              "tags": "list",
              "thumbnails": "list",
              "title": "string",
              "uploadTimestamp": "integer",
              "viewCount": "integer"
            },
            "media": {
              "audio": [
                {
                  "bitrate": "float",
                  "channels": "integer",
                  "codec": "string",
                  "codecVariant": "string",
                  "extension": "string",
                  "language": "string",
                  "qualityNote": "string",
                  "rawCodec": "string",
                  "samplerate": "integer",
                  "size": "integer",
                  "url": "string",
                  "youtubeFormatId": "integer"
                }
              ],
              "subtitle": {
                "string": [
                  {
                    "extension": "string",
                    "language": "string",
                    "url": "string"
                  }
                ]
              },
              "video": [
                {
                  "bitrate": "float",
                  "codec": "string",
                  "codecVariant": "string",
                  "extension": "string",
                  "framerate": "integer",
                  "height": "integer",
                  "language": "string",
                  "quality": "integer",
                  "qualityNote": "string",
                  "rawCodec": "string",
                  "size": "integer",
                  "url": "string",
                  "width": "integer",
                  "youtubeFormatId": "integer"
                }
              ]
            }
          }
        }

+ Response 400 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }

+ Response 500 (application/json)

        {
          "api": {
            "elapsedTime": "None",
            "errorMessage": "str",
            "status": "False",
            "version": "str"
          },
          "response": {}
        }
